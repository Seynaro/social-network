{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm/AddMessageForm.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","path","id","dialog","active","to","name","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","Dialogs","dialogsPage","sendMessage","state","dialogsElements","dialogs","map","d","messageElements","messages","m","dialogsItems","values","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,uFCSpKC,EAPC,SAACC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SAAUH,EAAMG,U,QCW3BC,EAZI,SAACJ,GAEhB,IAAIK,EAAO,YAAcL,EAAMM,GAE/B,OACI,yBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,QAC/B,kBAAC,IAAD,CAASC,GAAIJ,GAAOL,EAAMU,Q,kCCLhCC,EAAeC,YAAiB,KAkBzBC,EAAsBC,YAAU,CACzCC,KAAM,wBADyBD,EAhBZ,SAACd,GAEpB,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAeX,GAC1BD,KAAK,iBACLa,YAAY,uBACnB,6BACI,8CCgBLC,EA3BC,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,YACvBC,EAAQF,EAERG,EAAkBD,EAAME,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,UAC7DsB,EAAkBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAS/B,QAAS+B,EAAE/B,aAQlE,OACI,yBAAKF,UAAWC,IAAE2B,SACd,yBAAK5B,UAAWC,IAAEiC,cACbP,GAEL,yBAAK3B,UAAWC,IAAE+B,UACd,6BAAMD,GACN,kBAACnB,EAAD,CAAqBG,SAbb,SAACoB,GACjBV,EAAYU,EAAOC,sB,gDCTvBC,EAA6B,SAACX,GAAD,MAAY,CACzCY,OAAQZ,EAAMa,KAAKD,S,OCiBRE,sBACXC,aAfoB,SAACf,GACrB,MAAO,CACHF,YAAaE,EAAMF,gBAIA,SAACkB,GACxB,MAAO,CACHjB,YAAa,SAACW,GACVM,EAASC,YAAmBP,UDTR,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK/C,MAAMuC,OACL,kBAACM,EAAcE,KAAK/C,OADA,kBAAC,IAAD,CAAUS,GAAI,eAHV,GACXuC,IAAMH,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,KCM9DL,CAGbjB","file":"static/js/4.bdad28fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__31Yfx\",\"dialogsItems\":\"Dialogs_dialogsItems__2XFae\",\"messages\":\"Dialogs_messages__rLkyW\",\"message\":\"Dialogs_message__1W1cD\",\"active\":\"Dialogs_active__10jcf\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n};\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;","import {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/Forms/Forms\";\r\nimport {maxLengthCreator, requiredField} from \"../../../utils/validators/validator\";\r\nimport React from \"react\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[requiredField, maxLength100]}\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>)\r\n};\r\n\r\nexport const AddMessageFormRedux = reduxForm({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = ({dialogsPage, sendMessage}) => {\r\n    let state = dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name}/>);\r\n    let messageElements = state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        sendMessage(values.newMessageBody)\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messageElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\n                return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent\n};","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n}\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}