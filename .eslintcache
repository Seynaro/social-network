[{"F:\\it-kam\\projects\\social-network\\src\\index.js":"1","F:\\it-kam\\projects\\social-network\\src\\serviceWorker.js":"2","F:\\it-kam\\projects\\social-network\\src\\App.js":"3","F:\\it-kam\\projects\\social-network\\src\\hoc\\withSuspense.js":"4","F:\\it-kam\\projects\\social-network\\src\\components\\Common\\Preloader.tsx":"5","F:\\it-kam\\projects\\social-network\\src\\redux\\app-reducer.ts":"6","F:\\it-kam\\projects\\social-network\\src\\redux\\redux-store.ts":"7","F:\\it-kam\\projects\\social-network\\src\\components\\Users\\UsersContainer.tsx":"8","F:\\it-kam\\projects\\social-network\\src\\components\\Login\\Login.tsx":"9","F:\\it-kam\\projects\\social-network\\src\\components\\Navbar\\Navbar.jsx":"10","F:\\it-kam\\projects\\social-network\\src\\components\\Header\\HeaderContainer.jsx":"11","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx":"12","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileContainer.jsx":"13","F:\\it-kam\\projects\\social-network\\src\\redux\\auth-reducer.ts":"14","F:\\it-kam\\projects\\social-network\\src\\redux\\profile-reducer.ts":"15","F:\\it-kam\\projects\\social-network\\src\\redux\\dialogs-reducer.ts":"16","F:\\it-kam\\projects\\social-network\\src\\redux\\sidebar-reducer.ts":"17","F:\\it-kam\\projects\\social-network\\src\\redux\\users-reducer.ts":"18","F:\\it-kam\\projects\\social-network\\src\\redux\\users-selectors.ts":"19","F:\\it-kam\\projects\\social-network\\src\\hoc\\withAuthRedirect.js":"20","F:\\it-kam\\projects\\social-network\\src\\components\\Users\\Users.tsx":"21","F:\\it-kam\\projects\\social-network\\src\\utils\\validators\\validator.ts":"22","F:\\it-kam\\projects\\social-network\\src\\components\\Common\\Forms\\Forms.tsx":"23","F:\\it-kam\\projects\\social-network\\src\\components\\Header\\Header.tsx":"24","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\Dialogs.tsx":"25","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\Profile.jsx":"26","F:\\it-kam\\projects\\social-network\\src\\utils\\object-helpers.js":"27","F:\\it-kam\\projects\\social-network\\src\\api\\api.ts":"28","F:\\it-kam\\projects\\social-network\\src\\components\\Users\\User.tsx":"29","F:\\it-kam\\projects\\social-network\\src\\components\\Common\\Paginator\\Paginator.tsx":"30","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"31","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx":"32","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\MyPostsContainer.jsx":"33","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"34","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"35","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx":"36","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\MyPosts.jsx":"37","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"38","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\AddNewPostForm\\AddNewPostForm.js":"39","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\Post\\Post.tsx":"40","F:\\it-kam\\projects\\social-network\\src\\api\\security-api.ts":"41","F:\\it-kam\\projects\\social-network\\src\\api\\auth-api.ts":"42","F:\\it-kam\\projects\\social-network\\src\\api\\profile-api.ts":"43","F:\\it-kam\\projects\\social-network\\src\\api\\users-api.ts":"44"},{"size":481,"mtime":1610354301957,"results":"45","hashOfConfig":"46"},{"size":5140,"mtime":1580971706473,"results":"47","hashOfConfig":"46"},{"size":2876,"mtime":1612429436075,"results":"48","hashOfConfig":"46"},{"size":238,"mtime":1610354301903,"results":"49","hashOfConfig":"46"},{"size":214,"mtime":1586934340132,"results":"50","hashOfConfig":"46"},{"size":996,"mtime":1612425721846,"results":"51","hashOfConfig":"46"},{"size":1203,"mtime":1612425721846,"results":"52","hashOfConfig":"46"},{"size":2730,"mtime":1612425721841,"results":"53","hashOfConfig":"46"},{"size":2487,"mtime":1612425721836,"results":"54","hashOfConfig":"46"},{"size":1231,"mtime":1586934340428,"results":"55","hashOfConfig":"46"},{"size":451,"mtime":1600328488480,"results":"56","hashOfConfig":"46"},{"size":659,"mtime":1610354301690,"results":"57","hashOfConfig":"46"},{"size":1856,"mtime":1610354301791,"results":"58","hashOfConfig":"46"},{"size":3507,"mtime":1612429602704,"results":"59","hashOfConfig":"46"},{"size":4061,"mtime":1612428925036,"results":"60","hashOfConfig":"46"},{"size":1326,"mtime":1611040705090,"results":"61","hashOfConfig":"46"},{"size":207,"mtime":1612429520984,"results":"62","hashOfConfig":"46"},{"size":4175,"mtime":1612428939901,"results":"63","hashOfConfig":"46"},{"size":713,"mtime":1612425721851,"results":"64","hashOfConfig":"46"},{"size":613,"mtime":1600328488494,"results":"65","hashOfConfig":"46"},{"size":1157,"mtime":1612425721841,"results":"66","hashOfConfig":"46"},{"size":402,"mtime":1612425721851,"results":"67","hashOfConfig":"46"},{"size":1541,"mtime":1612425721836,"results":"68","hashOfConfig":"46"},{"size":651,"mtime":1600328488480,"results":"69","hashOfConfig":"46"},{"size":958,"mtime":1601885539949,"results":"70","hashOfConfig":"46"},{"size":617,"mtime":1610354301789,"results":"71","hashOfConfig":"46"},{"size":234,"mtime":1601885539949,"results":"72","hashOfConfig":"46"},{"size":505,"mtime":1612425721832,"results":"73","hashOfConfig":"46"},{"size":1867,"mtime":1612425721841,"results":"74","hashOfConfig":"46"},{"size":1805,"mtime":1612425721836,"results":"75","hashOfConfig":"46"},{"size":829,"mtime":1600328488478,"results":"76","hashOfConfig":"46"},{"size":277,"mtime":1612425721836,"results":"77","hashOfConfig":"46"},{"size":599,"mtime":1600328488490,"results":"78","hashOfConfig":"46"},{"size":370,"mtime":1586934340194,"results":"79","hashOfConfig":"46"},{"size":2489,"mtime":1610354301793,"results":"80","hashOfConfig":"46"},{"size":1274,"mtime":1612425721841,"results":"81","hashOfConfig":"46"},{"size":893,"mtime":1610354301788,"results":"82","hashOfConfig":"46"},{"size":1453,"mtime":1610354301792,"results":"83","hashOfConfig":"46"},{"size":796,"mtime":1600328488482,"results":"84","hashOfConfig":"46"},{"size":560,"mtime":1612425721841,"results":"85","hashOfConfig":"46"},{"size":142,"mtime":1612425721832,"results":"86","hashOfConfig":"46"},{"size":775,"mtime":1612428893164,"results":"87","hashOfConfig":"46"},{"size":692,"mtime":1612425721832,"results":"88","hashOfConfig":"46"},{"size":414,"mtime":1612425721832,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"tjebwx",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"104"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"92"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"92"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"F:\\it-kam\\projects\\social-network\\src\\index.js",[],["189","190"],"F:\\it-kam\\projects\\social-network\\src\\serviceWorker.js",[],"F:\\it-kam\\projects\\social-network\\src\\App.js",[],"F:\\it-kam\\projects\\social-network\\src\\hoc\\withSuspense.js",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Common\\Preloader.tsx",["191"],"import preloader from '../../assets/images/preloader.gif';\r\nimport React from 'react';\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","F:\\it-kam\\projects\\social-network\\src\\redux\\app-reducer.ts",[],["192","193"],"F:\\it-kam\\projects\\social-network\\src\\redux\\redux-store.ts",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Users\\UsersContainer.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Login\\Login.tsx",["194"],"import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/Forms/Forms\";\r\nimport {requiredField} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../Common/Forms/Forms.module.css\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype LoginFormOwnPropsType = {\r\n\tcaptchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({handleSubmit, error, captchaUrl}) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\r\n\t\t\t{createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [requiredField], Input)}\r\n\t\t\t{createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [requiredField], Input, {type: \"password\"})}\r\n\t\t\t{createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"rememberMe\")}\r\n\r\n\r\n\t\t\t{captchaUrl && <img src={captchaUrl}/>}\r\n\t\t\t{captchaUrl && createField<LoginFormValuesTypeKeys>(\"Symbols from image\", \"captcha\", [requiredField], Input, {})}\r\n\r\n\t\t\t{error && <div className={style.formSummaryError}>\r\n\t\t\t\t{error}\r\n            </div>}\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>)\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({form: 'login'})(LoginForm);\r\n\r\ntype MapStatePropsType = {\r\n\tcaptchaUrl: string | null\r\n\tisAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n\tloginTC: (email: string, password: string, rememberMe: boolean, captcha: string) => {}\r\n}\r\n\r\ntype LoginFormValuesType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n\tcaptcha: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = ({loginTC, isAuth, captchaUrl}) => {\r\n\tconst onSubmit = (formData: LoginFormValuesType) => {\r\n\t\tloginTC(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n\t};\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Redirect to={\"/profile\"}/>\r\n\t}\r\n\r\n\treturn <div>\r\n\t\t<h1>Login</h1>\r\n\t\t<LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl}/>\r\n\t</div>\r\n};\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n\tisAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginTC})(Login);","F:\\it-kam\\projects\\social-network\\src\\components\\Navbar\\Navbar.jsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Header\\HeaderContainer.jsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\DialogsContainer.tsx",["195"],"import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n}\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileContainer.jsx",["196"],"import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatusTC, getUserProfileTC, savePhotoTC, saveProfileTC, updateStatusTC} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfileTC(userId);\r\n        this.props.getStatusTC(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         savePhoto={this.props.savePhotoTC}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         saveProfileTC={this.props.saveProfileTC}\r\n                         updateStatusTC={this.props.updateStatusTC}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfileTC, getStatusTC, updateStatusTC, savePhotoTC, saveProfileTC}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n\r\n","F:\\it-kam\\projects\\social-network\\src\\redux\\auth-reducer.ts",[],"F:\\it-kam\\projects\\social-network\\src\\redux\\profile-reducer.ts",["197"],"import {profileAPI} from \"../api/profile-api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {ProfileType, PostType, PhotosType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst DELETE_POST = 'profile/DELETE-POST';\r\nconst SET_USER_PROFILE = 'profile/SET-USER-PROFILE';\r\nconst SET_STATUS = 'profile/SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 2},\r\n        {id: 2, message: \"It's my first post\", likesCount: 11},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n    newPostText: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)};\r\n        }\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            };\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype AddPostACType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\ntype DeletePostACType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\ntype SetUserProfileACType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\ntype SetStatusACType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\ntype SavePhotoSuccessACType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\n\r\nexport const addPostAC = (newPostText: string): AddPostACType => ({type: ADD_POST, newPostText});\r\nexport const deletePostAC = (postId: number): DeletePostACType => ({type: DELETE_POST, postId})\r\nconst setUserProfileAC = (profile: ProfileType): SetUserProfileACType => ({type: SET_USER_PROFILE, profile});\r\nconst setStatusAC = (status: string): SetStatusACType => ({type: SET_STATUS, status});\r\nconst savePhotoSuccessAC = (photos: PhotosType): SavePhotoSuccessACType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfileTC = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n\r\n    dispatch(setUserProfileAC(response.data));\r\n};\r\n\r\nexport const getStatusTC = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatusAC(response.data));\r\n};\r\n\r\nexport const updateStatusTC = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatusAC(status));\r\n    }\r\n};\r\n\r\nexport const savePhotoTC = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccessAC(response.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfileTC = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.userId\r\n    const response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfileTC(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n    return Promise.reject(response.data.messages[0])\r\n    }\r\n};\r\n\r\n\r\nexport default profileReducer;","F:\\it-kam\\projects\\social-network\\src\\redux\\dialogs-reducer.ts",[],"F:\\it-kam\\projects\\social-network\\src\\redux\\sidebar-reducer.ts",[],"F:\\it-kam\\projects\\social-network\\src\\redux\\users-reducer.ts",[],"F:\\it-kam\\projects\\social-network\\src\\redux\\users-selectors.ts",[],"F:\\it-kam\\projects\\social-network\\src\\hoc\\withAuthRedirect.js",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Users\\Users.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\utils\\validators\\validator.ts",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Common\\Forms\\Forms.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Header\\Header.tsx",["198"],"import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={classes.header}>\r\n        <img\r\n            src='https://static6.depositphotos.com/1035649/553/v/450/depositphotos_5537406-stock-illustration-sign-friendship-love.jpg'>\r\n        </img>\r\n\r\n        <div className={classes.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logoutTC}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\Dialogs.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\Profile.jsx",[],"F:\\it-kam\\projects\\social-network\\src\\utils\\object-helpers.js",[],"F:\\it-kam\\projects\\social-network\\src\\api\\api.ts",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Users\\User.tsx",["199"],"import React from 'react';\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype OneUserType = {\r\n    followingInProgress: Array<number>\r\n    followTC: (userId: number) => void\r\n    unfollowTC: (userId: number) => void\r\n    u: UserType\r\n}\r\n\r\nlet User: React.FC<OneUserType> = ({u, followingInProgress, followTC, unfollowTC}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n               <div>\r\n                   <NavLink to={'/profile/' + u.id}>\r\n                 <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                      className={styles.userPhoto}/>\r\n               </NavLink>\r\n               </div>\r\n               <div>\r\n                   {u.followed\r\n                       ? <button disabled={followingInProgress\r\n                           .some(id => id === u.id)}\r\n                                 onClick={() => {\r\n                                     unfollowTC(u.id)\r\n                                 }\r\n                                 }>Unfollow</button>\r\n\r\n                       : <button disabled={followingInProgress\r\n                           .some(id => id === u.id)}\r\n                                 onClick={() => {\r\n                                     followTC(u.id)\r\n                                 }\r\n                                 }>Follow</button>}\r\n               </div>\r\n            </span>\r\n            <span>\r\n\r\n               <span>\r\n                 <div>{u.name}</div>\r\n                 <div>{u.status}</div>\r\n               </span>\r\n\r\n               <span>\r\n                 <div>{\"u.location.country\"}</div>\r\n                 <div>{\"u.location.city\"}</div>\r\n               </span>\r\n\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","F:\\it-kam\\projects\\social-network\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\Message\\Message.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\MyPostsContainer.jsx",["200"],"import React from 'react';\r\nimport {addPostAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostAC(newPostText));\r\n        },\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","F:\\it-kam\\projects\\social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["201"],"import React, {useState} from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, savePhoto, status, updateStatusTC, isOwner, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n         saveProfile(formData).then(\r\n             () => {setEditMode(false)}\r\n         )\r\n        };\r\n\r\n    return (\r\n        <div className={classes.descriptionBlock}>\r\n            <img src={profile.photos.large || userPhoto} className={classes.mainPhoto}/>\r\n\r\n            {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n            {editMode\r\n                ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                : <ProfileData profile={profile} isOwner={isOwner}\r\n                               goToEditMode={() => {\r\n                                   setEditMode(true)\r\n                               }}/>}\r\n\r\n            <ProfileStatus status={status}\r\n                           updateStatusTC={updateStatusTC}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>edit</button>\r\n        </div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </div>\r\n        <div>\r\n            <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\MyPosts.jsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\AddNewPostForm\\AddNewPostForm.js",[],"F:\\it-kam\\projects\\social-network\\src\\components\\Profile\\My posts\\Post\\Post.tsx",[],"F:\\it-kam\\projects\\social-network\\src\\api\\security-api.ts",[],"F:\\it-kam\\projects\\social-network\\src\\api\\auth-api.ts",[],"F:\\it-kam\\projects\\social-network\\src\\api\\profile-api.ts",[],"F:\\it-kam\\projects\\social-network\\src\\api\\users-api.ts",[],{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":6,"column":9,"nodeType":"208","endLine":6,"endColumn":32},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":24,"column":19,"nodeType":"208","endLine":24,"endColumn":42},{"ruleId":"209","severity":1,"message":"210","line":1,"column":8,"nodeType":"211","messageId":"212","endLine":1,"endColumn":13},{"ruleId":"213","severity":1,"message":"214","line":28,"column":44,"nodeType":"215","messageId":"216","endLine":28,"endColumn":46},{"ruleId":"217","severity":1,"message":"218","line":49,"column":34,"nodeType":"219","messageId":"220","endLine":53,"endColumn":14},{"ruleId":"206","severity":1,"message":"207","line":7,"column":9,"nodeType":"208","endLine":8,"endColumn":137},{"ruleId":"206","severity":1,"message":"207","line":20,"column":18,"nodeType":"208","endLine":21,"endColumn":53},{"ruleId":"209","severity":1,"message":"210","line":1,"column":8,"nodeType":"211","messageId":"212","endLine":1,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":30,"column":13,"nodeType":"208","endLine":30,"endColumn":89},"no-native-reassign",["221"],"no-negated-in-lhs",["222"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]